IE4 = navigator.appName.indexOf("Explorer") >= 0tal = new Array("noll","ett","tv&aring;","tre","fyra","fem","sex","sju","&aring;tta","nio","tio","elva","tolv","tretton","fjorton","femton")delar = new Array("","hela","halva","tredjedelar","fj&auml;rdelar","femtedelar","sjättedelar","sjundedelar","&aring;ttondelar","niondelar","tiondelar","elftedelar","tolftedelar","trettondelar","fjortondelar","femtondelar","sextondelar")nrOfPages = 1fNum = /(.*_)([0-9]+)(\.html)/gifName = /\//gifunction check(what){	var str = "Avancerade kontrollfunktioner för automatisk rättning kommer senare.\n" +	"MA203: " + what + "     Facit: " + MA203[what[0]][what[1]].facit	alert(str)}function goHome(){	document.location.href = "http://62.20.62.195/utveckling/MaC/index.html"}function output(i,j,k){	document.write(MA203[i][j].output[k])}function anIneq(min,max){	var a = anInt(min,max)	var b = anInt(min,max)	var c = anInt(min,max)	var d = anInt(min,max)	var i = anInt(0,1)	var symbols = new Array("&lt;","&gt;")	var symb = symbols[i]	var str = a + " "	str += monom(b,"x") + " " + symb + " " + c + " " + monom(d,"x")	return str}function anInt(min,max){	return Math.round(Math.random() * (max - min) + min)}function filename(){	str = document.location.href.split("/")	return str[str.length - 1]}function goNext(){	fNum.exec(document.location.href)	var num = RegExp.$2	num = num % nrOfPages + 1	document.location.href = RegExp.$1 + num + RegExp.$3}function goPrev(){	fNum.exec(document.location.href)	var num = RegExp.$2 - 1	if (num==0) num = nrOfPages	document.location.href = RegExp.$1 + num + RegExp.$3}function kursmal(){		return filename().replace(".html","")}function nu(){	today = new Date()	return today.toLocaleString()}function init(){	MA203 = new Array()	for (i=0; i<16; ++i)	{			MA203[i] = new Array()		for (j=0; j<6; ++j)		{			MA203[i][j] = {output:[],input:[], facit:[]}		}	}	var N = new Array(0,anInt(4,6),anInt(5,8),anInt(2,4),anInt(3,5))	MA203[1][1].output[1] = tal[N[1]]	MA203[1][1].output[2] = tal[N[2]]	MA203[1][1].output[3] = tal[N[3]]	MA203[1][1].output[4] = tal[N[4]]	MA203[1][1].output[5] = tal[N[3] + N[4]] + " " + delar[N[1] + N[2]]	MA203[1][1].output[6] = N[3] + "/" + N[1] + " + " + N[4] + "/" + N[2]	MA203[1][1].output[7] = (N[3] + N[4]) + "/" + (N[1] + N[2])	MA203[1][1].output[8] = N[3] + "/" + N[1]	MA203[1][1].output[9] = N[4] + "/" + N[2]	MA203[2][1].output[1] = anInt(1,10)	MA203[2][1].output[2] = "10" + anInt(-30,-16).toString().sup()	var a = anInt(2,7); var b = a + anInt(2,5)	MA203[2][2].output[1] = a + "<sup>" + (b + "000") + "</sup>"	MA203[2][2].output[2] = b + "<sup>" + (a + "000") + "</sup>"}function integer(n,length){	var str = "00000000000000000000" + n	if (length > str.length) alert("Warning: Too many digits requested.")	return str.substr(str.length-length, str.length) // NS and IE compatible.}function monom(a,x){	var str = sign(a)	str += str==""? "":(Math.abs(a)==1? " " + x:" " + Math.abs(a) + x)	return str}function numeric(a,b){	return a - b}function output(i,j,k){	document.write(MA203[i][j].output[k])}function sign(x){	s = x=="" || isNaN(x)? "NaN": parseFloat(x)==0? "":x>0? "+":"-"	return s}function uttal(n){	var ental = new Array("noll","ett","tv&aring;","tre","fyra","fem","sex","sju","&aringtta","nio","tio","tio","elva","tolv","tretton","fjorton","femton","sexton","sjutton","arton","nitton")	var tiotal = new Array("","tio","tjugo","trettio","fyrtio","femtio","sextio","sjuttio","&aring;ttio","nittio")	var r = 0; var i = 0	str = new Array()	do	{		r = n % 10		str[i++] = ental[r]		n = (n - r) / 10		r = n % 10		str[i++] = tiotal[r]		n = (n - r) / 10		r = n % 10		str[i++] = ental[r] + " hundra"	}	while (n != 0 && i < 5)	return str.reverse()}function x2equation(min,max){	do	{		var r1 = anInt(min,max)		var r2 = anInt(min,max)		var a = -(r1+r2)		var b = r1*r2	}	while (a==0 || Math.abs(a)==1 || b==0)	var r = ([r1, r2]).sort(numeric)	var htmlStr = "x<sup>2</sup> "	var x2Obj = {html: "x<sup>2</sup> " + sign(a) + " " + Math.abs(a) + "x " + sign(b) + " " + Math.abs(b) + " = 0", r:r}	return x2Obj}/*init()*/